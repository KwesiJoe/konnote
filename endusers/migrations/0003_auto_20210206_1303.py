# Generated by Django 3.0.8 on 2021-02-06 13:03

import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    dependencies = [
        ('endusers', '0002_auto_20181211_1256'),
    ]

    operations = [
        migrations.AlterField(
            model_name='customer',
            name='customer_type',
            field=models.CharField(choices=[('Visitor', 'Visitor'), ('Prospect', 'Prospect'), ('Activate User', 'Activate User'), ('Paying Customer', 'Paying Customer'), ('Repeat Customer', 'Repeat Customer')], default=0, max_length=20),
        ),
        migrations.AlterField(
            model_name='customer',
            name='role',
            field=models.CharField(choices=[('CUST ADMIN', 'Customer Administrator'), ('CUST STAFF', 'Customer Staff'), ('CUSTOMER', 'Customer')], default=0, max_length=20),
        ),
        migrations.AlterField(
            model_name='staff',
            name='role',
            field=models.CharField(choices=[('ADMIN', 'Administrator'), ('MANAGEMENT', 'Management'), ('CUSTOMER CARE', 'Customer Care')], default=0, max_length=20),
        ),
        migrations.AlterField(
            model_name='staff',
            name='supervisor',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='endusers.Staff'),
        ),
        migrations.AlterField(
            model_name='user',
            name='country',
            field=django_countries.fields.CountryField(blank=True, default='', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='email_verified',
            field=models.BooleanField(choices=[(0, 'Not Verified'), (1, 'Verified')], default=0),
        ),
        migrations.AlterField(
            model_name='user',
            name='gender',
            field=models.BooleanField(choices=[(0, 'Female'), (1, 'Male')], default=0),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='mobile',
            field=models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+254722722722'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AlterField(
            model_name='user',
            name='mobile_verified',
            field=models.BooleanField(choices=[(0, 'Not Verified'), (1, 'Verified')], default=0),
        ),
        migrations.AlterField(
            model_name='user',
            name='postal_address',
            field=models.CharField(blank=True, default='', max_length=6, validators=[django.core.validators.RegexValidator(message="Postal Code must be entered in the format: '00100'. Up to 6 digits allowed.", regex='^\\d{5,6}$')]),
        ),
        migrations.AlterField(
            model_name='user',
            name='postal_code',
            field=models.CharField(blank=True, default='', max_length=6, validators=[django.core.validators.RegexValidator(message="Postal Code must be entered in the format: '00100'. Up to 6 digits allowed.", regex='^\\d{5,6}$')]),
        ),
        migrations.AlterField(
            model_name='user',
            name='telephone',
            field=models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+254722722722'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
        ),
    ]
